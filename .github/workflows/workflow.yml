name: Terraform
on:
  schedule:
    - cron: '*/10 * * * *'

defaults:
  run:
    working-directory: terraform/app
    
permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: test
    
    env:
      AWS_DEFAULT_REGION: us-east-1
      
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::774908757058:role/github-actions-role
        role-session-name: samplerolesession
        aws-region: ${{env.AWS_DEFAULT_REGION}}
        
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: AWS Cli
      run: |
           aws sns publish --topic-arn arn:aws:sns:us-east-1:774908757058:testing-ok --message "Forced Terraform Apply just start running."

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      
    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
